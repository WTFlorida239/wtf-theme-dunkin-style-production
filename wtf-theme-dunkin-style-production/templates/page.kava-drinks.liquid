{%- comment -%}
  Kava Drinks — Size = variant; Flavor = line item property
  Config:
    - Set page metafield: namespace `wtf`, key `product_handle` → product handle to sell here.
      If not set, defaults to 'kava-drink-base'.
  Requirements:
    - assets/wtf-variants.js (canonical variant resolver for Size chips)
    - assets/wtf-ajax-cart.js (AJAX add-to-cart for [data-wtf-ajax] forms)
    - layout/theme.liquid includes the cart count hydrator and the two assets once.
{%- endcomment -%}

{%- assign kava_handle = page.metafields.wtf.product_handle | default: 'kava-drink-base' -%}
{%- assign product = all_products[kava_handle] -%}

{%- if product == null -%}
  <main id="MainContent" class="page-width" style="max-width:1100px;margin:0 auto;padding:16px;">
    <h1>Kava Drinks</h1>
    <p>
      Product "<strong>{{ kava_handle }}</strong>" not found. Set the page metafield <code>wtf.product_handle</code> to
      a valid product handle and reload.
    </p>
  </main>
{%- else -%}
  <main id="MainContent" class="page-width" style="max-width:1100px;margin:0 auto;padding:16px;">
    <header style="display:flex;align-items:center;gap:16px;margin-bottom:16px;">
      <img
        src="{{ 'kava_drinks_150x150.png' | asset_url }}"
        alt="Kava Drinks"
        width="75"
        height="75"
        loading="eager"
        decoding="async"
        style="border-radius:12px;box-shadow:0 3px 10px rgba(0,0,0,.08);"
      >
      <div>
        <h1 style="margin:0;font-weight:800;letter-spacing:.2px;">Kava Drinks</h1>
        <div style="color:#666;">Choose a Size, pick a Flavor, add to cart.</div>
      </div>
    </header>

    <form
      action="/cart/add"
      method="post"
      enctype="multipart/form-data"
      data-wtf-ajax
      style="display:block; background:#fff;border:1px solid #eee;border-radius:16px;padding:16px 16px 20px;box-shadow:0 6px 24px rgba(0,0,0,.06);"
    >
      <script>
        window.WTF_PRODUCT_JSON={{ product | json }};
      </script>

      {%- comment -%} Size (variant option) {%- endcomment -%}
      {%- assign size_option = '' -%}
      {%- for opt in product.options_with_values -%}
        {%- if opt.name == 'Size' or opt.name == 'size' -%}{%- assign size_option = opt -%}{%- endif -%}
      {%- endfor -%}

      <section style="margin-bottom:14px;">
        <label style="display:block;font-weight:700;margin-bottom:8px;">Size</label>
        <div style="display:flex;flex-wrap:wrap;gap:8px;">
          {%- if size_option != blank -%}
            {%- for val in size_option.values -%}
              <button
                type="button"
                class="wtf-chip{% if forloop.first %} wtf-chip--active{% endif %}"
                data-option="{{ size_option.name }}"
                data-value="{{ val }}"
                aria-label="Size {{ val }}"
                aria-checked="{% if forloop.first %}true{% else %}false{% endif %}"
                role="radio"
              >
                {{ val }}
              </button>
            {%- endfor -%}
          {%- else -%}
            <em>No Size option found on this product. Add a <strong>Size</strong> option to variants.</em>
          {%- endif -%}
        </div>
      </section>

      {%- comment -%} Flavor (Line Item Property) {%- endcomment -%}
      {%- assign flavors = product.metafields.wtf.flavors -%}
      {%- assign fallback_flavors = 'Vanilla,Chocolate,Caramel,Hazelnut,Mocha,Coconut,Almond,Irish Cream,French Vanilla,Salted Caramel'
        | split: ','
      -%}

      <section style="margin-bottom:14px;">
        <label style="display:block;font-weight:700;margin-bottom:8px;">Flavor</label>
        <input type="hidden" name="properties[Flavor]" id="kavaFlavor">
        <div id="kava-flavor-chips" style="display:flex;flex-wrap:wrap;gap:8px;">
          {%- if flavors and flavors.size > 0 -%}
            {%- for f in flavors -%}
              <button
                type="button"
                class="wtf-chip{% if forloop.first %} wtf-chip--active{% endif %}"
                data-flavor="{{ f | strip }}"
              >
                {{ f | strip }}
              </button>
            {%- endfor -%}
          {%- else -%}
            {%- for f in fallback_flavors -%}
              <button
                type="button"
                class="wtf-chip{% if forloop.first %} wtf-chip--active{% endif %}"
                data-flavor="{{ f | strip }}"
              >
                {{ f | strip }}
              </button>
            {%- endfor -%}
          {%- endif -%}
        </div>
      </section>

      {%- comment -%} Quantity {%- endcomment -%}
      <section style="margin-bottom:14px;">
        <label style="display:block;font-weight:700;margin-bottom:8px;">Quantity</label>
        <div style="display:flex;align-items:center;gap:10px;">
          <button
            type="button"
            class="wtf-chip"
            onclick="(function(i){i.value=Math.max(1,parseInt(i.value||'1',10)-1)})(document.getElementById('kavaQty'))"
          >
            −
          </button>
          <input
            id="kavaQty"
            type="number"
            name="quantity"
            value="1"
            min="1"
            style="width:90px;text-align:center;padding:10px;border:1px solid #ddd;border-radius:999px;"
          >
          <button
            type="button"
            class="wtf-chip"
            onclick="(function(i){i.value=Math.max(1,parseInt(i.value||'1',10)+1)})(document.getElementById('kavaQty'))"
          >
            +
          </button>
        </div>
      </section>

      <input type="hidden" name="id" id="kavaVariantId" value="">
      <button type="submit" class="wtf-add-to-cart-btn" style="margin-top:6px;">
        Add to Cart — <span id="kava-price">{{ product.selected_or_first_available_variant.price | money }}</span>
      </button>
    </form>
  </main>

  <script>
    (function () {
      // Flavor chips → properties[Flavor]
      const chipsWrap = document.getElementById('kava-flavor-chips');
      const input = document.getElementById('kavaFlavor');
      function setFlavor(val) {
        if (!input) return;
        input.value = val;
        chipsWrap.querySelectorAll('.wtf-chip[data-flavor]').forEach((b) => {
          b.classList.toggle('wtf-chip--active', b.getAttribute('data-flavor') === val);
          b.setAttribute('aria-checked', b.classList.contains('wtf-chip--active') ? 'true' : 'false');
        });
      }
      if (chipsWrap) {
        const first = chipsWrap.querySelector('.wtf-chip[data-flavor]');
        if (first) setFlavor(first.getAttribute('data-flavor'));
        chipsWrap.addEventListener('click', (e) => {
          const b = e.target.closest('.wtf-chip[data-flavor]');
          if (!b) return;
          setFlavor(b.getAttribute('data-flavor'));
        });
      }
      document.addEventListener('wtf:variant:change', function (e) {
        var v = e.detail && e.detail.variant;
        if (!v) return;
        var money = (v.price / 100).toLocaleString(undefined, { style: 'currency', currency: 'USD' });
        var priceEl = document.getElementById('kava-price');
        if (priceEl) priceEl.textContent = money;
      });
    })();
  </script>
{%- endif -%}
